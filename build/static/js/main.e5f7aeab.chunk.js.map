{"version":3,"sources":["components/app-header/app-header.js","components/app-search-panel/app-search-panel.js","components/post-status-filter/post-status-filter.js","components/post-list-item/post-list-item.js","components/post-list/post-list.js","components/post-add-fom/post-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","tweet","allTweet","likedTweet","className","AppSearchPanel","onChangeValue","e","value","target","props","onChange","type","placeholder","this","React","Component","PostStatus","state","filter","setFilter","setState","allBtn","likeBtn","onClick","PostListItem","label","dellete","important","like","changeImportant","setLike","postClassName","PostList","posts","delletePost","elements","map","post","id","PostAddForm","valueInput","onSubmit","preventDefault","length","addPost","data","App","index","findIndex","elem","beforeDeleteElem","slice","afterDeleteElem","replace","Date","valueOf","toString","item","newItem","dataBefore","dataAfter","onSearch","temp","toLowerCase","indexOf","setSearchValue","filterPosts","searchResult","filterResault","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5f7aeab.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\n\r\nconst AppHeader = ({allTweet, likedTweet}) => {\r\n\r\n    let tweet;\r\n    if (allTweet < 2) {\r\n        tweet = 'tweet';\r\n    } else {\r\n        tweet = 'tweets';\r\n    }\r\n\r\n    return (\r\n        <div className=\"app-header d-flex align-items-center\">\r\n            <h1>Jack Daniels</h1>\r\n            <h2>{allTweet} {tweet}, {likedTweet} of them like</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './app-search-panel.css';\r\n\r\n\r\nexport default class AppSearchPanel extends React.Component {\r\n    onChangeValue = (e) => {\r\n        const value = e.target.value;\r\n        this.props.onChange(value);\r\n    }\r\n\r\n        render() {\r\n            return (\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Enter here\"\r\n                    className=\"search-input form-control\"\r\n                    onChange={this.onChangeValue}\r\n                />\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport './post-status-filter.css';\r\n\r\n\r\nexport default class PostStatus extends React.Component {\r\n    state = {\r\n        filter: 'all'\r\n    }\r\n\r\n    setFilter = (filter) =>{\r\n        this.setState({\r\n            filter: filter,\r\n        });\r\n        this.props.setFilter(filter);\r\n    }\r\n\r\n    render() {\r\n        let allBtn = 'btn',\r\n            likeBtn = 'btn';\r\n\r\n        if (this.state.filter === 'like') {\r\n            allBtn += ' btn-outline-secondary';\r\n            likeBtn += ' btn-info';\r\n        } else {\r\n            allBtn += ' btn-info';\r\n            likeBtn += ' btn-outline-secondary';\r\n        }\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                <button \r\n                    type=\"button\" \r\n                    className={allBtn}\r\n                    onClick={()=> this.setFilter('all')}\r\n                    >All\r\n                </button>\r\n                <button \r\n                    type=\"button\"\r\n                    className={likeBtn}\r\n                    onClick={()=>this.setFilter('like')}\r\n                    >Liked\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport './post-list-item.css'\r\n\r\nexport default class PostListItem extends React.Component{\r\n    render() {\r\n        const {label, dellete, important, like, changeImportant, setLike} = this.props;\r\n\r\n        let postClassName = 'app-list-item d-flex justify-content-between ';\r\n        if (important) {\r\n            postClassName += ' important';\r\n        } \r\n        if (like) {\r\n            postClassName += ' like pointer';\r\n        } \r\n\r\n        return (\r\n            <div className={postClassName}>\r\n                <span\r\n                onClick={setLike}\r\n                className=\"app-list-item-label\">\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex align-items-center justify-content-center\">\r\n                    <button \r\n                    type=\"button\"\r\n                    onClick={changeImportant}\r\n                    className=\"btn-star btn-sm\">\r\n                        <i className=\"fas fa-star\"></i>\r\n                    </button>\r\n                    <button \r\n                        onClick={dellete}\r\n                        type=\"button\"\r\n                        className=\"btn-trash btn-sm\">\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                    <i \r\n                        className='fa fa-heart'\r\n                        onClick={setLike}>\r\n                    </i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PostListItem from '../post-list-item/post-list-item';\r\n\r\nimport './post-list.css'\r\n\r\n\r\nexport default class PostList extends React.Component {\r\n    render() {\r\n        const {posts, delletePost, setLike, changeImportant} = this.props;\r\n        const elements = posts.map((post)=>{\r\n            const {id} = post;\r\n            return (\r\n                <li key={id} className=\"list-group-item\">\r\n                    <PostListItem\r\n                    {...post}\r\n                    dellete = { () => delletePost(id)}\r\n                    setLike = { () => setLike(id)}\r\n                    changeImportant = { () => changeImportant(id)}\r\n                    />\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <ul className=\"app-list list-group\">\r\n                {elements}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\n    ","import React from 'react';\r\n\r\nimport './post-add-form.css'\r\n\r\n\r\nexport default class PostAddForm extends React.Component {\r\n    state = {\r\n        valueInput: ''\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        const value = this.state.valueInput;\r\n        e.preventDefault();\r\n        if (!value.length < 1) {\r\n            this.props.addPost(value);\r\n            this.setState({\r\n                valueInput: ''\r\n            });\r\n        }\r\n    }\r\n    \r\n    onChangeValue = (e) => {\r\n        this.setState({\r\n            valueInput: e.target.value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n                className=\"bottom-panel d-flex\" \r\n                onSubmit={this.onSubmit}\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder = \"Yout new post here\"\r\n                    className = \"form-control new-post-label\"\r\n                    onChange = {this.onChangeValue}\r\n                    value = {this.state.valueInput}\r\n                />\r\n                <button \r\n                type=\"submit\" \r\n                className=\"btn btn-outline-secondary\">\r\n                    Publish\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport AppHeader from '../app-header/app-header';\r\nimport AppSearchPanel from '../app-search-panel/app-search-panel';\r\nimport PostStatusFilter from '../post-status-filter/post-status-filter';\r\nimport PostList from '../post-list/post-list';\r\nimport PostAddForm from '../post-add-fom/post-add-form';\r\n\r\nimport './app.css';\r\n\r\nconst data = [\r\n    {label: \"First tweet\", id:'34jnf', important: false, like: true},\r\n    {label: \"Second tweet\", id:'kdjyh437', important: false, like: false},\r\n    {label: \"Third tweet\", id:'35dft34', important: false, like: false},\r\n]\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n    state = {\r\n        data: data,\r\n        value: '',\r\n        filter: 'all',\r\n    }\r\n\r\n    delletePost = (id) => {\r\n        this.setState(({data})=>{\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const beforeDeleteElem = data.slice(0,index); \r\n            const afterDeleteElem = data.slice(index + 1); \r\n            const newData = [...beforeDeleteElem, ...afterDeleteElem];\r\n            \r\n            return {\r\n                data: newData,\r\n            }\r\n        });\r\n    }; \r\n\r\n    addPost = (value) => {\r\n        this.setState(({data})=> {\r\n            const post = {\r\n                label: value, \r\n                id: value.replace(/[а-яА-Я]/gi, '').slice(0, 3) + new Date().valueOf().toString().slice(-3)\r\n            }\r\n            const newArr = [...data, post];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n            \r\n        });\r\n    }\r\n    \r\n    setLike = (id) => {\r\n        this.setState(({data})=> {\r\n            const index = data.findIndex(item => item.id === id),\r\n                  newItem = {...data[index], like: !data[index].like},\r\n                  dataBefore = data.slice(0,index),\r\n                  dataAfter = data.slice(index + 1),\r\n                  newData = [...dataBefore, newItem, ...dataAfter];\r\n                \r\n            return {\r\n                data: newData\r\n            }\r\n        }); \r\n    }\r\n\r\n    changeImportant = (id) => {\r\n        this.setState(({data})=> {\r\n            const index = data.findIndex(item => item.id === id),\r\n                  newItem = {...data[index], important: !data[index].important},\r\n                  dataBefore = data.slice(0,index),\r\n                  dataAfter = data.slice(index + 1),\r\n                  newData = [...dataBefore, newItem, ...dataAfter];\r\n                \r\n            return {\r\n                data: newData\r\n            }\r\n        }); \r\n    }\r\n\r\n    onSearch = (temp, posts) => {\r\n        if (temp.length < 1) {\r\n            return posts\r\n        }\r\n\r\n        const res = posts.filter(item => item.label.toLowerCase().indexOf(temp.toLowerCase()) > -1);\r\n\r\n        return res\r\n    }\r\n\r\n    setSearchValue = (value) => {\r\n        this.setState({\r\n            value: value,\r\n        });\r\n    }\r\n\r\n    filterPosts = (posts, filter) => {\r\n        if (filter === 'like'){\r\n            return posts.filter(item => item.like === true)\r\n        } else {\r\n            return posts\r\n        }\r\n    }\r\n\r\n    setFilter = (filter) => {\r\n        this.setState({\r\n            filter: filter\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {data, value, filter} = this.state;\r\n\r\n        const likedTweet = data.filter(item => item.like === true).length,\r\n              allTweet = data.length;\r\n\r\n        const searchResult = this.onSearch(value, data);\r\n\r\n        const filterResault = this.filterPosts(searchResult, filter);\r\n\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader\r\n                    allTweet = {allTweet}\r\n                    likedTweet = {likedTweet}\r\n                />\r\n                <div className=\"search-panel d-flex\">\r\n                    <AppSearchPanel \r\n                        onChange = {value => this.setSearchValue(value)}\r\n                    />\r\n                    <PostStatusFilter \r\n                        setFilter = {filter => this.setFilter(filter)}\r\n                    />\r\n                </div>\r\n                <PostList\r\n                    posts={filterResault}\r\n                    delletePost = {id=>this.delletePost(id)}\r\n                    setLike = { id => this.setLike(id)}\r\n                    changeImportant = { id => this.changeImportant(id)}\r\n                />\r\n                <PostAddForm \r\n                    addPost = {value=> this.addPost(value)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}